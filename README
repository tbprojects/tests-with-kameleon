== Tests with kameleon

Following code is written for the purpose of "Testing the user perspective with Ruby on Rails" article, which can be found here:
http://www.businesstechnologyarticles.eu/testing-the-user-perspective-with-ruby-on-rails

First, I will demonstrate how to setup basic automated test suite environment for a Ruby on Rails platform. Next, we will write a single end-to-end test which goal will be to ensure that our RoR application works as expected, from the user perspective. The test will also validate features integration within the system, telling us if the user can achieve his / her goals by using the application interface. Developers call such features integration test a “happy path”. A “happy path” it is usually a scenario which takes a virtual user for a journey through the application features, focusing on those that are expected to be most used. Furthermore, a “happy path” test scenario gives confidence that the system works well under typical conditions.

After we finish writing the end-to-end test, we will add a few supportive tests to our test suite. The goal of supportive tests is to verify alternative flows and other important features which have not been covered by the “happy path” test, e.g. access control.

Kameleon: https://github.com/cs3b/kameleon

Tomasz Borowski 2012